/* ===== FIXED index.css ===== */
@import "tailwindcss";
@import "tw-animate-css";

@custom-variant dark (&:is(.dark *));

:root {
  font-family: Inter, system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;

  color-scheme: light dark;
  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  
  --radius: 0.625rem;
  
  /* Light theme - CONVERTED TO RGB FOR TAILWIND COMPATIBILITY */
  --background: 255 255 255; /* oklch(1 0 0) */
  --foreground: 37 37 37; /* oklch(0.145 0 0) */
  --card: 255 255 255; /* oklch(1 0 0) */
  --card-foreground: 37 37 37; /* oklch(0.145 0 0) */
  --popover: 255 255 255; /* oklch(1 0 0) */
  --popover-foreground: 37 37 37; /* oklch(0.145 0 0) */
  --primary: 52 52 52; /* oklch(0.205 0 0) */
  --primary-foreground: 251 251 251; /* oklch(0.985 0 0) */
  --secondary: 247 247 247; /* oklch(0.97 0 0) */
  --secondary-foreground: 52 52 52; /* oklch(0.205 0 0) */
  --muted: 247 247 247; /* oklch(0.97 0 0) */
  --muted-foreground: 142 142 142; /* oklch(0.556 0 0) */
  --accent: 247 247 247; /* oklch(0.97 0 0) */
  --accent-foreground: 52 52 52; /* oklch(0.205 0 0) */
  --destructive: 220 38 38; /* oklch(0.577 0.245 27.325) */
  --border: 235 235 235; /* oklch(0.922 0 0) */
  --input: 235 235 235; /* oklch(0.922 0 0) */
  --ring: 181 181 181; /* oklch(0.708 0 0) */
  --chart-1: 234 179 8; /* oklch(0.646 0.222 41.116) */
  --chart-2: 34 197 94; /* oklch(0.6 0.118 184.704) */
  --chart-3: 59 130 246; /* oklch(0.398 0.07 227.392) */
  --chart-4: 168 85 247; /* oklch(0.828 0.189 84.429) */
  --chart-5: 239 68 68; /* oklch(0.769 0.188 70.08) */
  --sidebar: 251 251 251; /* oklch(0.985 0 0) */
  --sidebar-foreground: 37 37 37; /* oklch(0.145 0 0) */
  --sidebar-primary: 52 52 52; /* oklch(0.205 0 0) */
  --sidebar-primary-foreground: 251 251 251; /* oklch(0.985 0 0) */
  --sidebar-accent: 247 247 247; /* oklch(0.97 0 0) */
  --sidebar-accent-foreground: 52 52 52; /* oklch(0.205 0 0) */
  --sidebar-border: 235 235 235; /* oklch(0.922 0 0) */
  --sidebar-ring: 181 181 181; /* oklch(0.708 0 0) */
}

.dark {
  /* Dark theme - CONVERTED TO RGB FOR TAILWIND COMPATIBILITY */
  --background: 37 37 37; /* oklch(0.145 0 0) */
  --foreground: 251 251 251; /* oklch(0.985 0 0) */
  --card: 52 52 52; /* oklch(0.205 0 0) */
  --card-foreground: 251 251 251; /* oklch(0.985 0 0) */
  --popover: 52 52 52; /* oklch(0.205 0 0) */
  --popover-foreground: 251 251 251; /* oklch(0.985 0 0) */
  --primary: 235 235 235; /* oklch(0.922 0 0) */
  --primary-foreground: 52 52 52; /* oklch(0.205 0 0) */
  --secondary: 69 69 69; /* oklch(0.269 0 0) */
  --secondary-foreground: 251 251 251; /* oklch(0.985 0 0) */
  --muted: 69 69 69; /* oklch(0.269 0 0) */
  --muted-foreground: 181 181 181; /* oklch(0.708 0 0) */
  --accent: 69 69 69; /* oklch(0.269 0 0) */
  --accent-foreground: 251 251 251; /* oklch(0.985 0 0) */
  --destructive: 239 68 68; /* oklch(0.704 0.191 22.216) */
  --border: 26 26 26; /* oklch(1 0 0 / 10%) approximation */
  --input: 38 38 38; /* oklch(1 0 0 / 15%) approximation */
  --ring: 142 142 142; /* oklch(0.556 0 0) */
  --chart-1: 139 92 246; /* oklch(0.488 0.243 264.376) */
  --chart-2: 34 197 94; /* oklch(0.696 0.17 162.48) */
  --chart-3: 239 68 68; /* oklch(0.769 0.188 70.08) */
  --chart-4: 168 85 247; /* oklch(0.627 0.265 303.9) */
  --chart-5: 249 115 22; /* oklch(0.645 0.246 16.439) */
  --sidebar: 52 52 52; /* oklch(0.205 0 0) */
  --sidebar-foreground: 251 251 251; /* oklch(0.985 0 0) */
  --sidebar-primary: 139 92 246; /* oklch(0.488 0.243 264.376) */
  --sidebar-primary-foreground: 251 251 251; /* oklch(0.985 0 0) */
  --sidebar-accent: 69 69 69; /* oklch(0.269 0 0) */
  --sidebar-accent-foreground: 251 251 251; /* oklch(0.985 0 0) */
  --sidebar-border: 26 26 26; /* oklch(1 0 0 / 10%) approximation */
  --sidebar-ring: 142 142 142; /* oklch(0.556 0 0) */
}

@theme inline {
  --radius-sm: calc(var(--radius) - 4px);
  --radius-md: calc(var(--radius) - 2px);
  --radius-lg: var(--radius);
  --radius-xl: calc(var(--radius) + 4px);
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --color-card: var(--card);
  --color-card-foreground: var(--card-foreground);
  --color-popover: var(--popover);
  --color-popover-foreground: var(--popover-foreground);
  --color-primary: var(--primary);
  --color-primary-foreground: var(--primary-foreground);
  --color-secondary: var(--secondary);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-muted: var(--muted);
  --color-muted-foreground: var(--muted-foreground);
  --color-accent: var(--accent);
  --color-accent-foreground: var(--accent-foreground);
  --color-destructive: var(--destructive);
  --color-border: var(--border);
  --color-input: var(--input);
  --color-ring: var(--ring);
  --color-chart-1: var(--chart-1);
  --color-chart-2: var(--chart-2);
  --color-chart-3: var(--chart-3);
  --color-chart-4: var(--chart-4);
  --color-chart-5: var(--chart-5);
  --color-sidebar: var(--sidebar);
  --color-sidebar-foreground: var(--sidebar-foreground);
  --color-sidebar-primary: var(--sidebar-primary);
  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
  --color-sidebar-accent: var(--sidebar-accent);
  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
  --color-sidebar-border: var(--sidebar-border);
  --color-sidebar-ring: var(--sidebar-ring);
}

/* REMOVED CONFLICTING STYLES - Let your Button component handle this */
/* 
button {
  border-radius: 8px;
  border: 1px solid transparent;
  padding: 0.6em 1.2em;
  font-size: 1em;
  font-weight: 500;
  font-family: inherit;
  background-color: #34439b;
  cursor: pointer;
  transition: border-color 0.25s;
}
button:hover {
  border-color: #646cff;
}
button:focus,
button:focus-visible {
  outline: 4px auto -webkit-focus-ring-color;
}
*/

/* Links */
a {
  font-weight: 500;
  color: #646cff;
  text-decoration: inherit;
}
a:hover {
  color: #535bf2;
}

/* Body */
body {
  margin: 0;
  min-width: 320px;
  min-height: 100vh;
}

h1 {
  font-size: 3.2em;
  line-height: 1.1;
}

/* UPDATED MEDIA QUERY - Only for non-component elements */
@media (prefers-color-scheme: light) {
  a:hover {
    color: #747bff;
  }
}

@layer base {
  * {
    @apply border-border outline-ring/50;
  }
  body {
    @apply bg-background text-foreground;
    @apply min-h-screen;
  }
}

/* Theme Toggle Slider Styles */
.theme-slider-switch {
  position: relative;
  display: inline-block;
  width: 60px;
  height: 34px;
}

.theme-slider-switch input {
  opacity: 0;
  width: 0;
  height: 0;
}

.theme-slider-slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #f39c12;
  transition: .4s;
}

.theme-slider-slider.round {
  border-radius: 34px;
}

input:checked + .theme-slider-slider {
  background-color: #424242;
}

.slider-knob {
  position: absolute;
  height: 26px;
  width: 26px;
  left: 4px;
  bottom: 4px;
  background-color: white;
  border-radius: 50%;
  transition: .4s;
  display: flex;
  align-items: center;
  justify-content: center;
}

input:checked + .theme-slider-slider .slider-knob {
  transform: translateX(26px);
}

.slider-knob .sun-icon,
.slider-knob .moon-icon {
  position: absolute;
  color: #2c3e50;
  transition: opacity 0.2s ease-in-out;
}

.slider-knob .sun-icon {
  opacity: 1;
}
.slider-knob .moon-icon {
  opacity: 0;
}

input:checked + .theme-slider-slider .slider-knob .sun-icon {
  opacity: 0;
}
input:checked + .theme-slider-slider .slider-knob .moon-icon {
  opacity: 1;
}

/* ===== THEME CONTEXT (ThemeContext.tsx) ===== */
/*
import React, { createContext, useContext, useEffect, useState } from 'react';

type Theme = 'light' | 'dark' | 'system';

interface ThemeContextType {
  theme: Theme;
  setTheme: (theme: Theme) => void;
  actualTheme: 'light' | 'dark';
}

const ThemeContext = createContext<ThemeContextType | undefined>(undefined);

export function ThemeProvider({ children }: { children: React.ReactNode }) {
  const [theme, setTheme] = useState<Theme>(() => {
    if (typeof window !== 'undefined') {
      return (localStorage.getItem('theme') as Theme) || 'system';
    }
    return 'system';
  });

  const [actualTheme, setActualTheme] = useState<'light' | 'dark'>('light');

  useEffect(() => {
    const root = window.document.documentElement;
    
    root.classList.remove('light', 'dark');
    
    let resolvedTheme: 'light' | 'dark';
    
    if (theme === 'system') {
      resolvedTheme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
    } else {
      resolvedTheme = theme;
    }
    
    root.classList.add(resolvedTheme);
    setActualTheme(resolvedTheme);
    
    localStorage.setItem('theme', theme);
  }, [theme]);

  useEffect(() => {
    if (theme === 'system') {
      const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');
      const handleChange = () => {
        const resolvedTheme = mediaQuery.matches ? 'dark' : 'light';
        document.documentElement.classList.remove('light', 'dark');
        document.documentElement.classList.add(resolvedTheme);
        setActualTheme(resolvedTheme);
      };
      
      mediaQuery.addEventListener('change', handleChange);
      return () => mediaQuery.removeEventListener('change', handleChange);
    }
  }, [theme]);

  return (
    <ThemeContext.Provider value={{ theme, setTheme, actualTheme }}>
      {children}
    </ThemeContext.Provider>
  );
}

export const useTheme = () => {
  const context = useContext(ThemeContext);
  if (context === undefined) {
    throw new Error('useTheme must be used within a ThemeProvider');
  }
  return context;
};
*/

/* ===== UPDATED BUTTON COMPONENT (Button.tsx) ===== */
/*
import * as React from "react"
import { Slot } from "@radix-ui/react-slot"
import { cva, type VariantProps } from "class-variance-authority"
import { cn } from "@/lib/utils"

const buttonVariants = cva(
  "inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive",
  {
    variants: {
      variant: {
        default:
          "bg-primary text-primary-foreground shadow-xs hover:bg-primary/90",
        destructive:
          "bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40",
        outline:
          "border border-input bg-background shadow-xs hover:bg-accent hover:text-accent-foreground",
        secondary:
          "bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80",
        ghost: 
          "bg-transparent text-foreground hover:bg-accent hover:text-accent-foreground",
        link: "text-primary underline-offset-4 hover:underline",
      },
      size: {
        default: "h-9 px-4 py-2 has-[>svg]:px-3",
        sm: "h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5",
        lg: "h-10 rounded-md px-6 has-[>svg]:px-4",
        icon: "size-9",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
)

function Button({
  className,
  variant,
  size,
  asChild = false,
  ...props
}: React.ComponentProps<"button"> &
  VariantProps<typeof buttonVariants> & {
    asChild?: boolean
  }) {
  const Comp = asChild ? Slot : "button"

  return (
    <Comp
      data-slot="button"
      className={cn(buttonVariants({ variant, size, className }))}
      {...props}
    />
  )
}

export { Button, buttonVariants }
*/